[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mini-rag-runner"
version = "0.1.0"
authors = [{ name = "Gordon Watts", email = "gwatts@uw.edu" }]
description = "Package to run an LLM's MCP server with lightrag-hku"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "lightrag-hku",
    "typer",
    "mcp",
    "fastapi",
    "fsspec",
    "adlfs",
    # The following are things needed by lightrag but aren't in their
    # pyproject for some reason.
    "aiohttp",
    "configparser",
    "future",

    # Basic modules
    "gensim",

    # Additional Packages for export Functionality
    "pandas>=2.0.0",

    # Extra libraries are installed when needed using pipmaster

    "pydantic",
    "python-dotenv",

    "tenacity",
    "tiktoken",
    "numpy",
    "pipmaster",
    "openai",
    "tenacity",
    "networkx",
    "pip",
    "nano_vectordb",
]

[project.scripts]
mini-rag-mcp = "mini_rag_runner.mcp_runner:start_main"
light-rag-webapi = "mini_rag_runner.light_rag_runner:start_main"
light-entity-tester = "mini_rag_runner.light_entity_tester:start_main"

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "openpyxl",
]

[tool.hatch.build.targets.wheel]
packages = ["src/mini_rag_runner"]

[tool.hatch.build]
packages = ["src/mini_rag_runner"]

[tool.black]
line-length = 99
target-version = ["py310", "py311", "py312", "py313"]

[tool.isort]
profile = "black"
line_length = 99

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
